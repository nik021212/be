openapi: 3.0.1
info:
  version: 1.0.0
  title: Open API definition
  license:
    name: Sopra Steria
servers:
  - url: /utenti/v1
paths:
  /utenti:
    post:
      summary: Create user
      description: user creation
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../schemas/UserDto.json'
      responses:
        200:
          description: Return the User
          content:
            application/json:
             schema:
              $ref: '../schemas/UserDto.json'
        400:
          description: Bad Request
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      security:
        - bearerAuth: []
    put:
      summary: Update user
      description: user creation
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../schemas/UserDto.json'
      responses:
        200:
          description: Return the User
          content:
            application/json:
             schema:
              $ref: '../schemas/UserDto.json'
        400:
          description: Bad Request
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      security:
        - bearerAuth: []           
  /utenti/{id}:
    get:
      summary: Get user by id
      description: Get user by id
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return the User
          content:
            application/json:
             schema:
              $ref: '../schemas/UserDto.json'
        400:
          description: Bad Request
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      security:
        - bearerAuth: []
    delete:
      summary: Delete user by id
      description: Delete user by id
      operationId: deleteUserById
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return the Status of Operation
        400:
          description: Bad Request
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid